#!/bin/bash
CBUILD_VERSION=4
CONFIG_VERSION=1

PROJECT=scolte
CMP_C=gcc
CMP_CPP=g++
STD_C=c11
STD_CPP=c++17
WARN_C="-Wall -Wno-discarded-qualifiers"
WARN_CPP="-Wall"
SRC_C="$(    find src -name '*.c')"
SRC_CPP="$(  find src -name '*.cpp')"
#TESTS_C="$(  find tests -name '*.c')"
#TESTS_CPP="$(find tests -name '*.cpp')"

OUTDIR=bin
OBJDIR=obj
PRE_TASK_SCRIPT=tasks/pre_build.sh
POST_TASK_SCRIPT=

case $OS in
    WINDOWS)
        EXEC_FILE=$PROJECT.exe
        ;;
    LINUX)
        EXEC_FILE=$PROJECT
        ;;
    *)
        printf "${RED}operating system $OS has no configuration variants\n"
        exit 1
        ;;
esac

case $TASK in
    build_exec)
        C_ARGS="-O2"
        CPP_ARGS="$C_ARGS"
        LINKER_ARGS=""
        TASK_SCRIPT=cbuild/default_tasks/build_exec.sh
        KEREP_BUILD_TASK=build_static_lib
        ;;
    build_exec_dbg)
        C_ARGS="-O0 -g"
        CPP_ARGS="$C_ARGS"
        LINKER_ARGS=""
        TASK_SCRIPT=cbuild/default_tasks/build_exec.sh
        KEREP_BUILD_TASK=build_static_lib_dbg
        ;;
    exec)
        TASK_SCRIPT=cbuild/default_tasks/exec.sh
        ;;
    valgrind)  
        VALGRIND_ARGS="-s --log-file=valgrind.log --read-var-info=yes --track-origins=yes --fullpath-after=$PROJECT/ --leak-check=full --show-leak-kinds=all" 
        TASK_SCRIPT=cbuild/default_tasks/valgrind.sh
        ;;
esac
